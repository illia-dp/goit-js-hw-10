{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet timerInterval = null;\nconst startButton = document.querySelector('.start-btn');\nstartButton.disabled = true;\nconst datetimePicker = document.getElementById('datetime-picker');\nconst timerFields = document.querySelectorAll('.value');\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer() {\n  const remainingTime = userSelectedDate - new Date();\n\n  if (remainingTime <= 0) {\n    clearInterval(timerInterval);\n    startButton.disabled = false;\n    datetimePicker.disabled = false;\n    timerFields.forEach(field => (field.textContent = '00'));\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(remainingTime);\n\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerInterval = setInterval(updateTimer, 1000);\n  updateTimer();\n});\n"],"names":["userSelectedDate","timerInterval","startButton","datetimePicker","timerFields","flatpickr","selectedDates","iziToast","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","remainingTime","field"],"mappings":"+IAKA,IAAIA,EAAmB,KACnBC,EAAgB,KACpB,MAAMC,EAAc,SAAS,cAAc,YAAY,EACvDA,EAAY,SAAW,GACvB,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,iBAAiB,QAAQ,EAEtDC,EAAUF,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACrBN,EAAmBM,EAAc,CAAC,EAE9BN,EAAmB,IAAI,MACzBO,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDL,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,CAAC,EAED,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAc,CACrB,MAAMC,EAAgBjB,EAAmB,IAAI,KAE7C,GAAIiB,GAAiB,EAAG,CACtB,cAAchB,CAAa,EAC3BC,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1BC,EAAY,QAAQc,GAAUA,EAAM,YAAc,IAAK,EACvD,MACD,CAED,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAa,EAEjE,SAAS,cAAc,aAAa,EAAE,YAAcT,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCL,EAAeM,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,CAC1B,CAEAb,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BF,EAAgB,YAAYe,EAAa,GAAI,EAC7CA,GACF,CAAC"}